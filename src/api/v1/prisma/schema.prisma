generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model clients {
  id                  Int                   @id @default(autoincrement())
  name                String?               @db.VarChar(30)
  logo                String?               @db.VarChar(60)
  website             String?               @db.VarChar(30)
  email               String?               @db.VarChar(30)
  contact_no          String?               @db.VarChar(30)
  city                String?               @db.VarChar(30)
  created_by          Int?
  updated_by          Int?
  created_at          DateTime?             @db.Timestamp(0)
  updated_at          DateTime?             @db.Timestamp(0)
  is_deleted          Boolean?              @default(false)
  address_id          Int?
  addresss            String?               @db.VarChar(30)
  create              users?                @relation("create", fields: [created_by], references: [id], onDelete: Cascade, map: "Fk_clients_user")
  update              users?                @relation("update", fields: [updated_by], references: [id], onDelete: Cascade, map: "Fk_clients_user1")
  project             project[]
  representative_info representative_info[]

  @@unique([id, website], map: "id")
  @@unique([id, email], map: "id_2")
  @@unique([id, contact_no], map: "id_3")
  @@index([created_by], map: "Fk_clients_user")
  @@index([updated_by], map: "Fk_clients_user1")
  @@index([address_id], map: "Fk_client_address")
}

model certficate {
  id          Int       @id @default(autoincrement())
  name        String?   @db.Text
  certeficate String?   @db.VarChar(100)
  created_by  Int?
  updated_by  Int?
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
  is_deleted  Boolean?  @default(false)
}

model partner {
  id         Int       @id @default(autoincrement())
  name       String?   @db.Text
  partner    String?   @db.VarChar(100)
  created_by Int?
  updated_by Int?
  is_deleted Boolean?  @default(false)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model project {
  id                 Int                  @id @default(autoincrement())
  name               String?              @db.Text
  description        String?              @db.Text
  client_id          Int?
  created_by         Int?
  updated_by         Int?
  created_at         DateTime?            @db.Timestamp(0)
  updated_at         DateTime?            @db.Timestamp(0)
  is_deleted         Boolean?             @default(false)
  sector_id          Int?
  representative_id  Int?
  clients            clients?             @relation(fields: [client_id], references: [id], onDelete: Cascade, map: "Fk_project client")
  representative_inf representative_info? @relation(fields: [representative_id], references: [id], onDelete: Cascade, map: "Fk_project representative")
  sectors            sectors?             @relation(fields: [sector_id], references: [id], onDelete: Cascade, map: "Fk_project sectors")
  create             users?               @relation("create", fields: [created_by], references: [id], onDelete: Cascade, map: "Fk_project_user")
  update             users?               @relation("update", fields: [updated_by], references: [id], onDelete: Cascade, map: "Fk_project_user1")
  solutions          solutions[]          @relation("projecttosolutions")
  vendors            vendors[]            @relation("projecttovendors")

  @@index([client_id], map: "Fk_project representatives")
  @@index([sector_id], map: "Fk_project_sectors")
  @@index([created_by], map: "Fk_clients_user")
  @@index([updated_by], map: "Fk_clients_user1")
  @@index([representative_id], map: "Fk_project representative")
}

model representative_info {
  id               Int       @id @default(autoincrement())
  name             String?   @db.VarChar(45)
  email            String?   @unique(map: "email") @db.VarChar(45)
  contact_1        String?   @unique(map: "contact_1") @db.VarChar(45)
  contact_2        String?   @unique(map: "contact_2") @db.VarChar(30)
  position         String?
  created_by       Int?
  updated_by       Int?
  client_or_vendor Boolean?
  client_id        Int?
  vendor_id        Int?
  created_at       DateTime? @db.Timestamp(0)
  updated_at       DateTime? @db.Timestamp(0)
  is_deleted       Boolean?  @default(false)
  address_id       Int?
  address          String?   @db.VarChar(45)
  clients          clients?  @relation(fields: [client_id], references: [id], onDelete: Cascade, map: "Fk_client_representatives")
  create           users?    @relation("create", fields: [created_by], references: [id], onDelete: Cascade, map: "Fk_representatives_user")
  update           users?    @relation("update", fields: [updated_by], references: [id], onDelete: Cascade, map: "Fk_representatives_user1")
  vendors          vendors?  @relation(fields: [vendor_id], references: [id], onDelete: Cascade, map: "Fk_vendor_representatives")
  projects         project[]

  @@index([created_by], map: "Fk_representatives_user")
  @@index([updated_by], map: "Fk_representatives_user1")
  @@index([client_id], map: "Fk_client_representatives")
  @@index([vendor_id], map: "Fk_vendor_representatives")
  @@index([address_id], map: "Fk_representative_info_address")
}

model solutions {
  id            Int          @id @default(autoincrement())
  name          String?      @db.Text
  logo          String?      @db.VarChar(40)
  email         String?      @unique(map: "email") @db.VarChar(40)
  contact_no    String?      @db.VarChar(40)
  created_by    Int?
  updated_by    Int?
  created_at    DateTime?    @default(now()) @db.Timestamp(0)
  updated_at    DateTime?    @db.Timestamp(0)
  is_deleted    Boolean?     @default(false)
  description   String?      @db.Text
  department_id Int?
  create        users?       @relation("create", fields: [created_by], references: [id], onDelete: Cascade, map: "Fk_solutions_user")
  update        users?       @relation("update", fields: [updated_by], references: [id], onDelete: Cascade, map: "Fk_solutions_user1")
  project       project[]    @relation("projecttosolutions")
  department    department[] @relation("solutiontodepartment")

  @@index([updated_by], map: "Fk_solutions_user1")
  @@index([created_by], map: "Fk_solutions_user")
}

model users {
  id                                        Int                   @id @default(autoincrement())
  email                                     String?               @unique @db.VarChar(100)
  password                                  String?               @db.VarChar(200)
  isAdmin                                   Boolean?
  created_at                                String?               @db.VarChar(20)
  updated_at                                String?               @db.VarChar(20)
  created_by                                Int?
  updated_by                                Int?
  department                                String?               @db.VarChar(20)
  firstName                                 String?               @db.VarChar(30)
  gender                                    String?               @db.VarChar(20)
  is_deleted                                Boolean?              @default(false)
  lastName                                  String?               @db.VarChar(30)
  tel                                       String?               @db.VarChar(20)
  created_client                            clients[]             @relation("create")
  updated_client                            clients[]             @relation("update")
  projectfill_projectfill_created_byTousers department[]          @relation("projectfill_created_byTousers")
  projectfill_projectfill_updated_byTousers department[]          @relation("projectfill_updated_byTousers")
  created_project                           project[]             @relation("create")
  updated_project                           project[]             @relation("update")
  create_representative_info                representative_info[] @relation("create")
  update_representative_info                representative_info[] @relation("update")
  create_solutions                          solutions[]           @relation("create")
  update_solutions                          solutions[]           @relation("update")
  created_vendor                            vendors[]             @relation("create")
  updated_vendor                            vendors[]             @relation("update")
}

model sectors {
  id         Int       @id @default(autoincrement())
  name       String?   @db.Text
  created_by Int?
  updated_by Int?
  created_at DateTime? @db.Timestamp(0)
  update_at  DateTime? @db.Timestamp(0)
  is_deleted Boolean?  @default(false)
  project    project[]
}

model vendors {
  id                  Int                   @id @default(autoincrement())
  name                String?               @db.Text
  logo                String?               @db.VarChar(45)
  website             String?               @unique(map: "website") @db.VarChar(45)
  email               String?               @unique(map: "email") @db.VarChar(30)
  contact_phone       String?               @unique(map: "contact_phone") @db.VarChar(30)
  created_at          DateTime?             @db.Timestamp(0)
  update_at           DateTime?             @db.Timestamp(0)
  created_by          Int?
  updated_by          Int?
  is_deleted          Boolean?              @default(false)
  address_id          Int?
  address             String?               @db.VarChar(45)
  create              users?                @relation("create", fields: [created_by], references: [id], onDelete: Cascade, map: "Fk_vendors_user")
  update              users?                @relation("update", fields: [updated_by], references: [id], onDelete: Cascade, map: "Fk_vendors_user1")
  representative_info representative_info[]
  project             project[]             @relation("projecttovendors")

  @@index([created_by], map: "Fk_vendors_user")
  @@index([updated_by], map: "Fk_vendors_user1")
  @@index([address_id], map: "Fk_vendor_address")
}

model department {
  id                                  Int         @id @default(autoincrement())
  name                                String?     @db.Text
  description                         String?     @db.Text
  logo                                String?     @db.VarChar(30)
  created_by                          Int?
  updated_by                          Int?
  created_at                          DateTime?   @db.Timestamp(0)
  updated_at                          DateTime?   @db.Timestamp(0)
  is_deleted                          Boolean?    @default(false)
  users_projectfill_created_byTousers users?      @relation("projectfill_created_byTousers", fields: [created_by], references: [id], onDelete: Cascade, map: "Fk_projectFill_user")
  users_projectfill_updated_byTousers users?      @relation("projectfill_updated_byTousers", fields: [updated_by], references: [id], onDelete: Cascade, map: "Fk_projectFill_user1")
  solutions                           solutions[] @relation("solutiontodepartment")

  @@index([created_by], map: "Fk_projectFill_user")
  @@index([updated_by], map: "Fk_projectFill_user1")
}
